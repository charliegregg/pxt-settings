<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="Wzex}Bp/.H}a(OX[VaRt" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="U=$T,l-WNL.m},k=zphQ" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace Blocks {" line1="    //% block=&quot;magnitude of 3d vector at x %x and y %y and z %z&quot;" line2="    //% inlineInputMode=inline" line3="    export function mag3d(x: number, y: number, z: number): number {" line4="        return Math.sqrt(x * x + y * y + z * z);" line5="    }" line6="    /**" line7="    Computes the square of x" line8="    @param x the number to square" line9="**/" line10="    //% block=&quot;square $x&quot;" line11="    //% block.loc.fr=&quot;$x au carré&quot;" line12="    //% jsdoc.loc.fr=&quot;Calcule le carré de x&quot;" line13="    //% x.loc.fr=&quot;le nombre&quot;" line14="    function square(x: number): number { " line15="        return(x*x)" line16="    }" line17="}" numlines="18"></mutation><next><block type="typescript_statement" id="?ld1JZYDIZ8!MroO%vnG" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace game2wow {" line1="    /**" line2="     * Prompts the user for a boolean question" line3="     * @param title" line4="     * @param subtitle" line5="     */" line6="    //% group=&quot;Gameplay&quot;" line7="    //% weight=89 help=game/ask" line8="    //% blockId=gameask block=&quot;ask %title||%subtitle&quot;" line9="    //% group=&quot;Prompt&quot;" line10="    export function ask(title: string, subtitle?: string): boolean {" line11="        game.eventContext(); // initialize the game" line12="        control.pushEventContext();" line13="        game.showDialog(title, subtitle, &quot;A = OK, B = CANCEL&quot;);" line14="        let answer: boolean = null;" line15="        // short pause so that players don't skip through prompt" line16="        pause(500);" line17="" line18="        controller.A.onEvent(ControllerButtonEvent.Pressed, () =&gt; answer = true);" line19="        controller.B.onEvent(ControllerButtonEvent.Pressed, () =&gt; answer = false);" line20="        pauseUntil(() =&gt; answer !== null);" line21="        control.popEventContext();" line22="        return answer;" line23="    }" line24="}" numlines="25"></mutation></block></next></block></statement></block><block type="ctrlonevent" id="u#G{+l5MQ115m-e_63Kk" x="380" y="180"><field name="controller">controller.player2</field><field name="event">ControllerEvent.Connected</field><statement name="HANDLER"><block type="gameSplash" id="|y:`CL}KV2Y|IdWNz?Z."><mutation xmlns="http://www.w3.org/1999/xhtml" _expanded="0" _input_init="false"></mutation><value name="title"><shadow type="text" id="TClzvU(Relr^ghd43]v;"><field name="TEXT"/></shadow></value></block></statement></block><block type="ctrlonbuttonevent" id="@3k~fMe2w_PPrqU2}e|5" x="110" y="330"><field name="controller">controller.player2</field><field name="button">ControllerButton.A</field><field name="event">ControllerButtonEvent.Pressed</field></block></xml>